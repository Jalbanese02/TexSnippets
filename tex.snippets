global !p
def create_table(snip):
	arg1 = snip.buffer[snip.line].split('m')[0].strip()

	#Oma setti ni saan valittua helposti mit채 matriisiin ymp채rille tulee
	if arg1 == 'b':
		mark1 = '['
		mark2 = ']'
	elif arg1 == 'p': 
		mark1 = '('
		mark2 = ')'
	else:
		mark1 = arg1 
		mark2 = arg1

	rows = snip.buffer[snip.line].split('x')[0]
	cols = snip.buffer[snip.line].split('x')[1]
	int_val = lambda string: int(''.join(s for s in string if s.isdigit()))
	rows = int_val(rows)
	cols = int_val(cols)
	offset = cols + 1
	old_spacing = snip.buffer[snip.line][:snip.buffer[snip.line].rfind('\t') + 1]
	snip.buffer[snip.line] = ''
	final_str = old_spacing + "\\left" + mark1 + "\\begin{tabular}{ " + " ".join(['$' + str(i + 1) for i in range(cols)]) + " }\n"
	for i in range(rows):
		final_str += old_spacing + '\t$'
		final_str += "$ & $".join(['$' + str(i * cols + j + offset) for j in range(cols)])
		final_str += "$ \\\\\\\n"
	final_str += old_spacing + "\\end{tabular}" + "\\right" + mark2 + "\n$0"
	snip.expand_anon(final_str)

endglobal 

snippet int "Integral" i
\int_{$1}^{$2}$3
endsnippet

snippet eqsys "System of equations" i
\begin{cases}
&$1\\
&
\end{cases}
endsnippet

snippet roinatan "piirt채채" i
\sum_3^4 asaljdlkajdlksajlkd
endsnippet

snippet pd "Partial differential operator" i
\frac{\partial $1}{\partial $2}
endsnippet

snippet pd2 "Partial differential operator" i
\frac{\partial^2 $1}{\partial $2^2}
endsnippet

snippet pdn "Partial differential operator" i
\frac{\partial^$3 $1}{\partial $2^$3}
endsnippet

snippet df "Regular diffential operator" i
\frac{d $1}{d $2}
endsnippet

snippet dfn "Regular diffential operator" i
\frac{d^$3 $1}{d $2^$3}
endsnippet

snippet fr "Fraction" i
\frac{$1}{$2}
endsnippet

snippet ( "Paranthesis" i
\left( $1 \right)
endsnippet

snippet [ "Brackets" i
\left[ $1 \right]
endsnippet

snippet . "Multiplication" i
\cdot
endsnippet

snippet sm "Summation" i
\sum_{$1}^{$2}
endsnippet

snippet inf "Infinity" i
\infty
endsnippet

snippet eq "Equations" 
\begin{equation}
	$1
\end{equation}
endsnippet

snippet eql "Inline equation" i
$$1$
endsnippet

snippet feq "Multiline equation left aligned" 
\begin{flalign*}
	$1
\end{flalign*}
endsnippet

snippet lim "Limit" i
\lim_{$1 \to $2} 
endsnippet

snippet root "nth root" i
\sqrt[ $1]{$2}
endsnippet

snippet _ "underscript" i
_{$1}
endsnippet

snippet abs "absolute value" i
|$1|
endsnippet

snippet ^ "Power" i
^{$1}
endsnippet

pre_expand "create_table(snip)"
snippet "(\S+)m(\S+)(\d+)x(\d+)" "Generate table of *width* by *height*" r
endsnippet

snippet ip "Inner product" i
\langle $1 , $2 \rangle $3
endsnippet
